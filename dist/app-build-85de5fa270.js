"bundle";!function(){var a=System.amdDefine;a("app.html!github:systemjs/plugin-text@0.0.4.js",[],function(){return'<template>\n  <require from="./resources/number-format"></require>\n  <require from="./navigation.html"></require>\n  <require from="./new-measurement-element"></require>\n\n  <header>\n    <navigation containerless></navigation>\n  </header>\n\n  <main>\n    <div class="container-fluid" id="content-container">\n      <div class="row">\n        <div class="col-lg-6 col-xs-12">\n          <table class="table">\n            <thead class="thead-inverse">\n              <tr>\n                <th></th>\n                <th>Size per Day</th>\n                <th>Size per Week</th>\n                <th>Size per Year</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class="table-info">\n                <th>Overall Size</th>\n                <td>${sizePerDay | numberFormat}</td>\n                <td>${sizePerWeek | numberFormat}</td>\n                <td>${sizePerYear | numberFormat}</td>\n              </tr>\n            </tbody>\n          </table>\n\n          <table class="table">\n            <thead class="thead-inverse">\n              <tr>\n                <th>Custom Time</th>\n                <th>Non-Aggregated Size</th>\n                <th>Estimated Aggregated Size</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class="table-info">\n                <td>\n                  <div class="input-group">\n                    <input type="number" class="form-control form-number-input" value.bind="customTime" min="0">\n                    <span class="input-group-addon input-group-addon-no-size">d</span>\n                  </div>\n                </td>\n                <td>${customSizeNonAggregated | numberFormat}</td>\n                <td>${customSizeAggregated | numberFormat}</td>\n              </tr>\n            </tbody>\n          </table>\n\n          <table class="table table-striped">\n            <thead class="thead-inverse">\n              <tr>\n                <th>Unit Selection</th>\n                <th style="width: 180px">Unit</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td><input type="range" min="0" max="4" value.bind="unitId" class="form-range-input"></td>\n                <td>${units[unitId].string} [${units[unitId].abbr}]</td>\n              </tr>\n            </tbody>\n          </table>\n          <table class="table table-striped">\n            <thead class="thead-inverse">\n              <tr>\n                <th>Data Aggregation Settings</th>\n                <th>Value</th>\n                <th>Description</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>Enable/Disable Aggregation</td>\n                <td>\n                  <div class="onoffswitch">\n                    <input type="checkbox" class="onoffswitch-checkbox" id="data-aggregation" checked.bind="dataAggregation">\n                    <label class="onoffswitch-label" for="data-aggregation">\n                      <span class="onoffswitch-inner"></span>\n                      <span class="onoffswitch-switch"></span>\n                    </label>\n                  </div>\n                </td>\n                <td>Enables three-stage based data aggregation.</td>\n              </tr>\n              <tr>\n                <td>Stage 1 Age</td>\n                <td>\n                  <div class="input-group">\n                    <input type="number" class="form-control form-number-input" value.bind="stage1age" min="0" disabled.bind="!dataAggregation">\n                    <span class="input-group-addon input-group-addon-no-size">d</span>\n                  </div>\n                </td>\n                <td>Necessary raw data age for stage 1 aggregation.</td>\n              </tr>\n              <tr>\n                <td>Stage 1 Interval</td>\n                <td>\n                  <div class="input-group">\n                    <input type="number" class="form-control form-number-input" value.bind="stage1interval" min="0" max="24" disabled.bind="!dataAggregation">\n                    <span class="input-group-addon input-group-addon-no-size">h</span>\n                  </div>\n                </td>\n                <td>Stage 1 aggregation interval.</td>\n              </tr>\n              <tr>\n                <td>Stage 2 Age</td>\n                <td>\n                  <div class="input-group">\n                    <input type="number" class="form-control form-number-input" value.bind="stage2age" min="0" disabled.bind="!dataAggregation">\n                    <span class="input-group-addon input-group-addon-no-size">d</span>\n                  </div>\n                </td>\n                <td>Necessary raw data age for stage 2 aggregation.</td>\n              </tr>\n              <tr>\n                <td>Stage 2 Interval</td>\n                <td>\n                  <div class="input-group">\n                    <input type="number" class="form-control form-number-input" value.bind="stage2interval" min="0" max="24" disabled.bind="!dataAggregation">\n                    <span class="input-group-addon input-group-addon-no-size">h</span>\n                  </div>\n                </td>\n                <td>Stage 2 aggregation interval.</td>\n              </tr>\n              <tr>\n                <td>Stage 3 Age</td>\n                <td>\n                  <div class="input-group">\n                    <input type="number" class="form-control form-number-input" value.bind="stage3age" min="0" disabled.bind="!dataAggregation">\n                    <span class="input-group-addon input-group-addon-no-size">d</span>\n                  </div>\n                </td>\n                <td>Necessary raw data age for stage 3 aggregation.</td>\n              </tr>\n              <tr>\n                <td>Stage 3 Interval</td>\n                <td>\n                  <div class="input-group">\n                    <input type="number" class="form-control form-number-input" value.bind="stage3interval" min="0" max="24" disabled.bind="!dataAggregation">\n                    <span class="input-group-addon input-group-addon-no-size">h</span>\n                  </div>\n                </td>\n                <td>Stage 3 aggregation interval.</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <div class="col-lg-6 col-xs-12">\n          <table class="table table-striped">\n            <thead class="thead-inverse">\n              <tr>\n                <th>Measurement Type</th>\n                <th>Size per Measurement [bytes]</th>\n                <th>Measurement Interval</th>\n                <th colspan="2">Number of Measurements</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class="au-animate" repeat.for="measurement of measurements">\n                <td>${measurement.name}</td>\n                <td>\n                  <span title="${measurement.values} value${measurement.values != 1 ? \'s\' : \'\'} Ã  ${measurement.type.sizePerValue} bytes">\n                    ${measurement.size}\n                  </span>\n                </td>\n                <td>\n                  <div class="input-group">\n                    <input type="number" class="form-control form-number-input" value.bind="measurement.interval" min="0">\n                    <span class="input-group-addon input-group-addon-no-size">s</span>\n                  </div>\n                </td>\n                <td>\n                  <div class="input-group">\n                    <input type="number" class="form-control form-number-input" value.bind="measurement.number" min="0">\n                    <span class="input-group-addon input-group-addon-no-size">#</span>\n                  </div>\n                </td>\n                <td>\n                  <div class="text-center">\n                    <i class="fa fa-fw fa-trash" click.delegate="deleteMeasurement($index)" if.bind="measurement.deletable"></i>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n\n          <table class="table table-striped">\n            <thead class="thead-inverse">\n              <tr>\n                <th>Measurement Type</th>\n                <th>Size per Interval</th>\n                <th>Size per Day</th>\n                <th>Size per Week</th>\n                <th>Size per Year</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr class="au-animate" repeat.for="measurement of measurements">\n                <td>${measurement.name}</td>\n                <td>${measurement.number * measurement.size / units[unitId].factor | numberFormat}</td>\n                <td>${measurement.number * measurement.size * day / measurement.interval / units[unitId].factor | numberFormat}</td>\n                <td>${measurement.number * measurement.size * week / measurement.interval / units[unitId].factor | numberFormat}</td>\n                <td>${measurement.number * measurement.size * year / measurement.interval / units[unitId].factor | numberFormat}</td>\n              </tr>\n            </tbody>\n          </table>\n\n          <new-measurement measurements.bind="measurements"></new-measurement>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n'})}(),System.register("util/calculation-util.js",[],function(a,b){"use strict";return{setters:[],execute:function(){function b(a){return 24*a*60*60}a("getDaysInSeconds",b)}}}),System.register("measurements.js",["./resources/measurement-types"],function(a,b){"use strict";var c,d;return{setters:[function(a){c=a.measurementTypes}],execute:function(){a("measurementList",d=[{name:"Ping",type:c[0],values:1,size:c[0].sizePerValue,number:0,interval:60,deletable:!1},{name:"SNMP Interface",type:c[1],values:12,size:12*c[1].sizePerValue,number:0,interval:300,deletable:!1}]),a("measurementList",d)}}}),System.register("util/units.js",[],function(a,b){"use strict";var c;return{setters:[],execute:function(){a("units",c=[{id:0,string:"Byte",abbr:"B",factor:1},{id:1,string:"Kilobyte",abbr:"kB",factor:1e3},{id:2,string:"Megabyte",abbr:"MB",factor:1e6},{id:3,string:"Gigabyte",abbr:"GB",factor:1e9},{id:4,string:"Terabyte",abbr:"TB",factor:1e12}]),a("units",c)}}}),System.register("app.js",["jquery","bootstrap","aurelia-framework","./util/calculation-util","./measurements","./util/units"],function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d,e,f,g,h,i,j,k;return{setters:[function(a){},function(a){},function(a){d=a.inject},function(a){e=a.getDaysInSeconds},function(a){f=a.measurementList},function(a){g=a.units}],execute:function(){h=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),a("App",(i=d(f),k=i(j=function(){function a(b){c(this,a),this.units=[],this.measurements=[],this.day=86400,this.week=604800,this.year=31536e3,this.customTime=0,this.unitId=2,this.dataAggregation=!1,this.stage1age=14,this.stage1interval=1,this.stage2age=60,this.stage2interval=8,this.stage3age=180,this.stage3interval=24,this.units=g,this.measurements=b}return a.prototype.deleteMeasurement=function(a){if(a>=0&&a<this.measurements.length){var b=this.measurements[a];b.deletable&&this.measurements.splice(a,1)}},h(a,[{key:"sizePerDay",get:function(){for(var a=0,b=0;b<this.measurements.length;b++)a+=this.measurements[b].size*this.measurements[b].number*this.day/this.measurements[b].interval;return a/this.units[this.unitId].factor}},{key:"sizePerWeek",get:function(){for(var a=0,b=0;b<this.measurements.length;b++)a+=this.measurements[b].size*this.measurements[b].number*this.week/this.measurements[b].interval;return a/this.units[this.unitId].factor}},{key:"sizePerYear",get:function(){for(var a=0,b=0;b<this.measurements.length;b++)a+=this.measurements[b].size*this.measurements[b].number*this.year/this.measurements[b].interval;return a/this.units[this.unitId].factor}},{key:"customSizeNonAggregated",get:function(){for(var a=0,b=0;b<this.measurements.length;b++)a+=this.measurements[b].size*this.measurements[b].number*e(this.customTime)/this.measurements[b].interval;return a/this.units[this.unitId].factor}},{key:"customSizeAggregated",get:function(){if(this.dataAggregation===!1)return 0;for(var a=0,b=0;b<this.customTime;b++)for(var c=0;c<this.measurements.length;c++)a+=b<this.stage1age?this.measurements[c].size*this.measurements[c].number*this.day/this.measurements[c].interval:b>=this.stage1age&&b<this.stage2age?this.measurements[c].size*this.measurements[c].number*this.day/(3600*this.stage1interval):b>=this.stage2age&&b<this.stage3age?this.measurements[c].size*this.measurements[c].number*this.day/(3600*this.stage2interval):this.measurements[c].size*this.measurements[c].number*this.day/(3600*this.stage3interval);return a/this.units[this.unitId].factor}}]),a}())||j)),a("App",k)}}}),System.register("main.js",["aurelia-framework","aurelia-logging-console"],function(a,b){"use strict";var c,d;return{setters:[function(a){c=a.LogManager},function(a){d=a.ConsoleAppender}],execute:function(){function b(a){a.use.defaultBindingLanguage().defaultResources().plugin("aurelia-animator-css"),a.start().then(function(a){return a.setRoot("app",document.body)})}c.addAppender(new d),c.setLevel(c.logLevel.debug),a("configure",b)}}}),function(){var a=System.amdDefine;a("navigation.html!github:systemjs/plugin-text@0.0.4.js",[],function(){return'<template>\n  <nav class="navbar navbar-fixed-top navbar-dark bg-inverse">\n    <button class="navbar-toggler hidden-sm-up" type="button" data-toggle="collapse"\n            data-target="#navigation-top-collapse">\n      &#9776;\n    </button>\n    <div class="collapse navbar-toggleable-xs" id="navigation-top-collapse">\n      <a class="navbar-brand" href="#">Database Sizing</a>\n    </div>\n  </nav>\n</template>\n'})}(),function(){var a=System.amdDefine;a("new-measurement-element.html!github:systemjs/plugin-text@0.0.4.js",[],function(){return'<template>\n  <div class="card card-inverse card-dark">\n    <div class="card-block">\n      <h3 class="card-title">Add additional measurements</h3>\n      <div>\n        <div class="form-group row">\n          <label for="name" class="col-sm-2 form-control-label card-text">Name</label>\n          <div class="col-sm-10">\n            <input type="text" class="form-control" id="name" placeholder="Enter a name..." value.bind="name">\n          </div>\n        </div>\n        <div class="form-group row">\n          <label for="type" class="col-sm-2 form-control-label card-text">Type</label>\n          <div class="col-sm-10">\n            <select class="form-control" id="type" value.bind="type">\n              <option selected>Select a type...</option>\n              <option repeat.for="type of measurementTypes" model.bind="type">${type.displayName}</option>\n            </select>\n          </div>\n        </div>\n        <div class="form-group row">\n          <label for="values" class="col-sm-2 form-control-label card-text">Values</label>\n          <div class="col-sm-10">\n            <input type="number" class="form-control" value.bind="values" min="1" id="values">\n          </div>\n        </div>\n      </div>\n      <button type="button" class="btn btn-primary" click.delegate="addMeasurement()">Add</button>\n    </div>\n  </div>\n</template>\n'})}(),System.register("resources/measurement-types.js",[],function(a,b){"use strict";var c;return{setters:[],execute:function(){a("measurementTypes",c=[{displayName:"Ping",sizePerValue:48,defaultInterval:60},{displayName:"SNMP",sizePerValue:64,defaultInterval:300},{displayName:"Business Process Script",sizePerValue:64,defaultInterval:300}]),a("measurementTypes",c)}}}),System.register("new-measurement-element.js",["aurelia-framework","./resources/measurement-types"],function(a,b){"use strict";function c(a,b,c,d){c&&Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:c.configurable,writable:c.writable,value:c.initializer?c.initializer.call(d):void 0})}function d(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}function e(a,b,c,d,e){var f={};return Object.keys(d).forEach(function(a){f[a]=d[a]}),f.enumerable=!!f.enumerable,f.configurable=!!f.configurable,("value"in f||f.initializer)&&(f.writable=!0),f=c.slice().reverse().reduce(function(c,d){return d(a,b,c)||c},f),e&&void 0!==f.initializer&&(f.value=f.initializer?f.initializer.call(e):void 0,f.initializer=void 0),void 0===f.initializer&&(Object.defineProperty(a,b,f),f=null),f}var f,g,h,i,j,k,l,m;return{setters:[function(a){f=a.bindable,g=a.customElement},function(a){h=a.measurementTypes}],execute:function(){a("NewMeasurement",(i=g("new-measurement"),m=i((k=function(){function a(){d(this,a),c(this,"measurements",l,this),this.name="",this.values=1,this.type=void 0,this.measurementTypes=h}return a.prototype.addMeasurement=function(){if(""!==this.name&&"Select a type..."!==this.type){var a={name:this.name,type:this.type,values:this.values,size:this.values*this.type.sizePerValue,number:0,interval:this.type.defaultInterval,deletable:!0};this.measurements.push(a),this.name="",this.type=void 0,this.values=1}},a}(),l=e(k.prototype,"measurements",[f],{enumerable:!0,initializer:null}),j=k))||j)),a("NewMeasurement",m)}}}),System.register("resources/number-format.js",[],function(a,b){"use strict";function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d;return{setters:[],execute:function(){a("NumberFormatValueConverter",d=function(){function a(){c(this,a)}return a.prototype.toView=function(a){var b=a.toLocaleString("value",{minimumFractionDigits:0});return a>0&&"0"===b?"> 0":b},a}()),a("NumberFormatValueConverter",d)}}});