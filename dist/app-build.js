"bundle";!function(){var a=System.amdDefine;a("app.html!github:systemjs/plugin-text@0.0.4.js",[],function(){return'<template> <require from="./number-format"></require> <require from="./navigation.html"></require> <header> <navigation></navigation> </header> <main> <div class="container-fluid" id="content-container"> <div class="row"> <div class="col-lg-6 col-xs-12"> <table class="table"> <thead class="thead-inverse"> <tr> <th></th> <th>Size per Day</th> <th>Size per Week</th> <th>Size per Year</th> </tr> </thead> <tbody> <tr class="table-success"> <th>Estimated Size</th> <td>${sizePerDay | numberFormat}</td> <td>${sizePerWeek | numberFormat}</td> <td>${sizePerYear | numberFormat}</td> </tr> </tbody> </table> <table class="table table-striped"> <thead class="thead-inverse"> <tr> <th>Unit Selection</th> <th style="width:180px">Unit</th> </tr> </thead> <tbody> <tr> <td><input type="range" min="0" max="4" value.bind="unitId" class="form-range-input"></td> <td>${units[unitId].string} [${units[unitId].abbr}]</td> </tr> </tbody> </table> <table class="table table-striped"> <thead class="thead-inverse"> <tr> <th>Data Aggregation Settings</th> <th>Value</th> <th>Description</th> </tr> </thead> <tbody> <tr> <td>Enable/Disable Aggregation</td> <td> <div class="onoffswitch"> <input disabled type="checkbox" name="onoffswitch" class="onoffswitch-checkbox" id="data-aggregation" checked.bind="dataAggregation"> <label class="onoffswitch-label" for="data-aggregation"> <span class="onoffswitch-inner"></span> <span class="onoffswitch-switch"></span> </label> </div> </td> <td>Specifies whether data should be aggregated on a three-stage basis.</td> </tr> <tr if.bind="dataAggregation"> <td>Stage 1 Age</td> <td></td> <td>The number of days after which raw data will be aggregated to the interval of stage 1.</td> </tr> <tr if.bind="dataAggregation"> <td>Stage 1 Interval</td> <td></td> <td>The interval of stage 1 in hours that will be used to aggregate raw data. All rows of an interval will be aggregated to one row. </td> </tr> </tbody> </table> </div> <div class="col-lg-6 col-xs-12"> <table class="table table-inverse"> <thead> <tr> <th>Measurement Type</th> <th>Size per Value [bytes]</th> <th>Size per Interval</th> <th>Number of Measurements</th> </tr> </thead> <tbody> <tr repeat.for="measurement of measurements"> <td>${measurement.name}</td> <td>${measurement.size}</td> <td>${measurement.number * measurement.size / units[unitId].factor | numberFormat}</td> <td> <div class="input-group"> <input type="number" name="number" class="form-control form-number-input" value.bind="measurement.number" min="0"> <span class="input-group-addon input-group-addon-no-size">#</span> </div> </td> </tr> </tbody> </table> <table class="table table-inverse"> <thead> <tr> <th>Measurement Type</th> <th>Size per Day</th> <th>Size per Week</th> <th>Size per Year</th> <th>Measurement Interval</th> </tr> </thead> <tbody> <tr repeat.for="measurement of measurements"> <td>${measurement.name}</td> <td>${measurement.number * measurement.size * day / measurement.interval / units[unitId].factor | numberFormat}</td> <td>${measurement.number * measurement.size * week / measurement.interval / units[unitId].factor | numberFormat}</td> <td>${measurement.number * measurement.size * year / measurement.interval / units[unitId].factor | numberFormat}</td> <td> <div class="input-group"> <input type="number" name="interval" class="form-control form-number-input" value.bind="measurement.interval" min="0"> <span class="input-group-addon input-group-addon-no-size">s</span> </div> </td> </tr> </tbody> </table> </div> </div> </div> </main> </template>'})}(),System.register("measurements.js",[],function(a,b){var c;return{setters:[],execute:function(){a("measurements",c=[{name:"Ping",size:48,number:0,interval:60},{name:"SNMP Interface",size:768,number:0,interval:300}]),a("measurements",c)}}}),System.register("units.js",[],function(a,b){var c;return{setters:[],execute:function(){a("units",c=[{id:0,string:"Byte",abbr:"B",factor:1},{id:1,string:"Kilobyte",abbr:"kB",factor:1e3},{id:2,string:"Megabyte",abbr:"MB",factor:1e6},{id:3,string:"Gigabyte",abbr:"GB",factor:1e9},{id:4,string:"Terabyte",abbr:"TB",factor:1e12}]),a("units",c)}}}),System.register("app.js",["./measurements","./units"],function(a,b){function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d,e,f,g;return{setters:[function(a){d=a.measurements},function(a){e=a.units}],execute:function(){f=function(){function a(a,b){for(var c=0;c<b.length;c++){var d=b[c];d.enumerable=d.enumerable||!1,d.configurable=!0,"value"in d&&(d.writable=!0),Object.defineProperty(a,d.key,d)}}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),a("App",g=function(){function a(){c(this,a),this.units=[],this.measurements={},this.day=86400,this.week=604800,this.year=31536e3,this.dataAggregation=!1,this.unitId=1,this.units=e,this.measurements=d}return f(a,[{key:"sizePerDay",get:function(){for(var a=0,b=0;b<this.measurements.length;b++)a+=this.measurements[b].size*this.measurements[b].number*this.day/this.measurements[b].interval;return a/this.units[this.unitId].factor}},{key:"sizePerWeek",get:function(){for(var a=0,b=0;b<this.measurements.length;b++)a+=this.measurements[b].size*this.measurements[b].number*this.week/this.measurements[b].interval;return a/this.units[this.unitId].factor}},{key:"sizePerYear",get:function(){for(var a=0,b=0;b<this.measurements.length;b++)a+=this.measurements[b].size*this.measurements[b].number*this.year/this.measurements[b].interval;return a/this.units[this.unitId].factor}}]),a}()),a("App",g)}}}),System.register("main.js",["aurelia-framework","aurelia-logging-console"],function(a,b){var c,d;return{setters:[function(a){c=a.LogManager},function(a){d=a.ConsoleAppender}],execute:function(){function b(a){a.use.defaultBindingLanguage().defaultResources(),a.start().then(function(a){return a.setRoot("app",document.body)})}c.addAppender(new d),c.setLevel(c.logLevel.debug),a("configure",b)}}}),function(){var a=System.amdDefine;a("navigation.html!github:systemjs/plugin-text@0.0.4.js",[],function(){return'<template> <nav class="navbar navbar-fixed-top navbar-light bg-faded"> <button class="navbar-toggler hidden-sm-up" type="button" data-toggle="collapse" data-target="#navigation-top-collapse"> &#9776; </button> <div class="collapse navbar-toggleable-xs" id="navigation-top-collapse"> <a class="navbar-brand" href="#">Database Sizing</a> </div> </nav> </template>'})}(),System.register("number-format.js",[],function(a,b){function c(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var d;return{setters:[],execute:function(){a("NumberFormatValueConverter",d=function(){function a(){c(this,a)}return a.prototype.toView=function(a){return a.toLocaleString("value",{minimumFractionDigits:0})},a}()),a("NumberFormatValueConverter",d)}}});